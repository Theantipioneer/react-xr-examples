{"version":3,"sources":["Button.js","App.js","index.js"],"names":["Button","props","useState","hover","setHover","setColor","onSelect","Math","random","onHover","onBlur","scale","args","attach","color","App","intensity","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA2BO,SAASA,EAAOC,GAAQ,IAAD,EACAC,oBAAS,GADT,mBACnBC,EADmB,KACZC,EADY,OAEAF,mBAAS,SAFT,mBAEZG,GAFY,WAI1B,OACI,cAAC,IAAD,CACIC,SAAU,kBAAMD,EAA0B,SAAhBE,KAAKC,SAAuB,IACtDC,QAAS,kBAAML,GAAS,IACxBM,OAAQ,kBAAMN,GAAS,IAH3B,SAKI,cAAC,IAAD,yBACIO,MAAOR,EAAQ,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,GACxCS,KAAM,CAAC,IAAK,IAAK,MACbX,GAHR,aAKI,sCAAsBY,OAAO,WAAWC,MAAM,iBCrB/CC,MAbf,WACE,OACE,eAAC,IAAD,WACE,8BAAcC,UAAW,KACzB,4BAAYC,SAAU,CAAC,GAAI,EAAE,KAE7B,cAACjB,EAAD,CAAQiB,SAAU,CAAC,EAAG,IAAM,KAC5B,cAAC,IAAD,QCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67273913.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport React, {\r\n    useState,\r\n    useEffect,\r\n    useRef,\r\n    Suspense,\r\n    useMemo,\r\n    useCallback,\r\n} from \"react\";\r\nimport {\r\n    VRCanvas,\r\n    useXREvent,\r\n    DefaultXRControllers,\r\n    Hands,\r\n    Select,\r\n    Hover,\r\n    useXR,\r\n    Interactive,\r\n    RayGrab,\r\n    useHitTest,\r\n    ARCanvas,\r\n} from \"@react-three/xr\";\r\n// import { OrbitControls, Sky, Text, Plane, Box } from '@react-three/drei'\r\nimport { Box, Sky, Text } from \"@react-three/drei\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\nimport { Group } from \"three\";\r\n\r\nexport function Button(props) {\r\n    const [hover, setHover] = useState(false);\r\n    const [color, setColor] = useState(0x123456);\r\n\r\n    return (\r\n        <Interactive\r\n            onSelect={() => setColor((Math.random() * 0xffffff) | 0)}\r\n            onHover={() => setHover(true)}\r\n            onBlur={() => setHover(false)}\r\n        >\r\n            <Box\r\n                scale={hover ? [1.5, 1.5, 1.5] : [1, 1, 1]}\r\n                args={[2.4, 5.1, 4.1]}\r\n                {...props}\r\n            >\r\n                <meshStandardMaterial attach=\"material\" color='#eb4034' />\r\n                {/* <Text position={[0, 0, 0.06]} fontSize={0.05} color=\"#000\" anchorX=\"center\" anchorY=\"middle\">\r\n        Hello react-xr!\r\n        </Text> */}\r\n            </Box>\r\n        </Interactive>\r\n    );\r\n}\r\n\r\nfunction PlayerExample() {\r\n    const { player } = useXR();\r\n\r\n    useFrame(() => {\r\n        player.rotation.x = player.rotation.y += 0.01;\r\n    });\r\n\r\n    return null;\r\n}\r\n\r\nfunction HitTestExample() {\r\n    const ref = useRef();\r\n\r\n    useHitTest((hit) => {\r\n        hit.decompose(\r\n            ref.current.position,\r\n            ref.current.rotation,\r\n            ref.current.scale\r\n        );\r\n    });\r\n\r\n    return <Box ref={ref} args={[0.1, 0.1, 0.1]} />;\r\n}\r\n","import './App.css';\nimport {Button} from './Button';\nimport {\n  ARCanvas,\n  DefaultXRControllers,\n} from '@react-three/xr';\n\n\nfunction App() {\n  return (\n    <ARCanvas>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[0, -2,3]} />\n\n      <Button position={[0, 0.8, -1]} />\n      <DefaultXRControllers />\n      {/* <HitTestExample /> */}\n    </ARCanvas>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}